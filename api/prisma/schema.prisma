// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @db.VarChar(36)
  email      String @unique
  first_name String
  last_name  String
  password   String
  // AchatBoutique AchatBoutique[]
}

model Prestataire {
  id       String  @id @db.VarChar(36)
  icon     String?
  password String

  name       String @unique
  // La référence dans les URLs (par exemple 'porsche', 'kart24', '24hmans', 'mongman' etc...)
  referencer String @unique
  email      String

  accentColor String?
  banner      String?

  links    PrestataireLink[]
  boutique Boutique?

  @@index([name])
}

model PrestataireLink {
  prestataire_id String @db.VarChar(36)
  id             Int    @id @default(autoincrement())
  name           String
  url            String

  prestataire Prestataire @relation(fields: [prestataire_id], references: [id], onDelete: Cascade)

  @@unique([prestataire_id, id])
}

// model AchatBoutique {
//   userId String @id
//   User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

model Boutique {
  prestataire_id String      @unique @db.VarChar(36)
  prestataire    Prestataire @relation(fields: [prestataire_id], references: [id], onDelete: Cascade)

  enabled Boolean @default(false)
  shop_id String  @id

  categories       BoutiqueCategory[]
  BoutiqueArticles BoutiqueArticles[]
}

model BoutiqueCategory {
  shop_id        String @db.VarChar(36)
  category_id    String @id
  category_label String

  shop             Boutique           @relation(fields: [shop_id], references: [shop_id], onDelete: Cascade)
  BoutiqueArticles BoutiqueArticles[]
}

model BoutiqueArticles {
  shop_id String   @db.VarChar(36)
  shop    Boutique @relation(fields: [shop_id], references: [shop_id], onDelete: Cascade)

  item_id     Int     @id @default(autoincrement())
  referencer  String  @unique
  name        String
  image       String?
  price       Decimal
  stock       Int
  description String? @db.Text

  category_id String
  category    BoutiqueCategory @relation(fields: [category_id], references: [category_id], onDelete: Cascade)

  deleted Boolean @default(false)
}
